/**
 * This produces an Airplane output (`value`) that is grouped with
 * other outputs with the same `key`. If a `key` is not provided,
 * a default key is used.
 *
 * To learn more about Airplane outputs, see the docs: https://docs.airplane.dev/reference/outputs
 *
 * @deprecated please use setOutput and appendOutput instead
 *
 * @example
 *   output("Task completed successfully.")
 *
 * @example
 *   output("error", "This is an error message")
 *
 * @example
 *   output("rows", { "name": "Carolyn", "occupation": "agent" })
 */
declare function output(keyOrValue: string | any, value?: any): void;
/**
 * This sets the Airplane output (`value`). If a path is provided, it sets the
 * portion of the JSON output described by the path.
 *
 * The path should consist of multiple strings and/or integers. A string
 * indicates the value associated with a key in a JSON object, and an integer
 * indicates the index of an element in a (0-indexed) JSON array. For instance,
 * calling
 * <code>
 *  setOutput(4, "test", 3)
 * </code>
 * would update the 3 to a 4 in the following JSON object:
 * <code>
 *  {"test": [0, 1, 2, 3]}
 * </code>
 *
 * To learn more about Airplane outputs, see the docs: https://docs.airplane.dev/reference/outputs
 *
 * @example
 *   setOutput("Task completed successfully.")
 *
 * @example
 *   setOutput({"error": "Received a 500 from the upstream API"})
 *
 * @example
 *   setOutput("Received a 500 from the upstream API", "error")
 */
declare function setOutput(value: any, ...path: (string | number)[]): void;
/**
 * This appends `value` to the Airplane output. If a path is provided, it
 * appends at the portion of the JSON output described by the path.
 *
 * The path should consist of multiple strings and/or integers. A string
 * indicates the value associated with a key in a JSON object, and an integer
 * indicates the index of an element in a (0-indexed) JSON array. For instance,
 * calling
 * <code>
 *  appendOutput(4, "test", 3)
 * </code>
 * would append the 4 to the array containing the 3 in the following JSON object:
 * <code>
 *  {"test": [[0], [1], [2], [3]]}
 * </code>
 *
 * To learn more about Airplane outputs, see the docs: https://docs.airplane.dev/reference/outputs
 *
 * @example
 *   appendOutput("Task completed successfully.")
 *
 * @example
 *   appendOutput({"name": "Carolyn", "occupation": "agent"}, "rows")
 *
 */
declare function appendOutput(value: any, ...path: (string | number)[]): void;
declare const _default: {
    appendOutput: typeof appendOutput;
    output: typeof output;
    setOutput: typeof setOutput;
};
export default _default;
